buildscript {
   ext.kotlin_version = '1.0.3'

   repositories {
     mavenCentral()
   }

   dependencies {
     classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
   }
}
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'signing'


/*
 * Gets the version name from the latest Git tag
 */
def getVersionName = { ->
	try {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
    } catch(Exception e) {
		return ""
    }
}

version = getVersionName()
group = 'de.jodamob.kotlin'


configurations {
    provided
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'org.javassist:javassist:3.20.0-GA'
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
	compile 'junit:junit:4.11'
	testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

sourceSets {
    main { compileClasspath += configurations.provided }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

compileJava {
  sourceCompatibility = 1.7
  targetCompatibility = 1.7
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'kotlin-testrunner'
                packaging 'jar'
                description 'Junit testrunner that removes final from classes and methods'
                url 'https://github.com/dpreussler/kotlin-testrunner'

                scm {
                    url 'scm:git@github.com:dpreussler/kotlin-testrunner.git'
                    connection 'scm:git@github.com:dpreussler/kotlin-testrunner.git'
                    developerConnection 'scm:git@github.com:dpreussler/kotlin-testrunner.git'
                }

                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'https://github.com/dpreussler/kotlin-testrunner/blob/master/LICENSE'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'dpreussler'
                        name 'Danny Preussler'
                    }
                }
            }
        }
    }
}